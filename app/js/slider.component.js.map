{"version":3,"sources":["slider.component.ts"],"names":["SliderComponent","SliderComponent.constructor","SliderComponent.onInit","SliderComponent.getIndexForCurrentOption","SliderComponent.doUpdate","SliderComponent.isShowSlider"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;YAGA;gBAoBIA,yBAAoBA,aAA4BA;oBAA5BC,kBAAaA,GAAbA,aAAaA,CAAeA;gBAAGA,CAACA;gBAEpDD,gCAAMA,GAANA;oBACIE,IAAIA,CAACA,QAAQA,CAACA,CAACA,CAACA,CAACA;gBACrBA,CAACA;gBAEDF,kDAAwBA,GAAxBA;oBACIG,IAAIA,KAAKA,GAAGA,CAACA,CAACA;oBACdA,GAAGA,CAAAA,CAACA,GAAGA,CAACA,CAACA,GAACA,CAACA,EAAEA,CAACA,GAACA,IAAIA,CAACA,eAAeA,CAACA,MAAMA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;oBAEzDA,CAACA;oBACDA,MAAMA,CAACA,KAAKA,CAACA;gBACjBA,CAACA;gBAEDH,kCAAQA,GAARA,UAASA,QAAeA;oBACpBI,IAAIA,CAACA,aAAaA,GAAGA,IAAIA,CAACA,aAAaA,CAACA,iBAAiBA,CAACA,IAAIA,CAACA,eAAeA,EAAEA,QAAQA,CAACA,CAACA;gBAC9FA,CAACA;gBAEDJ,sCAAYA,GAAZA;oBACIK,EAAEA,CAAAA,CAACA,IAAIA,CAACA,eAAeA,CAACA,UAAUA,IAAEA,IAAIA,CAACA,CAACA,CAACA;wBACvCA,MAAMA,CAACA,KAAKA,CAACA;oBACjBA,CAACA;oBACDA,EAAEA,CAAAA,CAACA,IAAIA,CAACA,eAAeA,CAACA,UAAUA,IAAIA,KAAKA,IAAIA,IAAIA,CAACA,UAAUA,IAAIA,KAAMA,CAACA,CAACA,CAACA;wBACvEA,MAAMA,CAACA,KAAKA,CAACA;oBACjBA,CAACA;oBACDA,EAAEA,CAAAA,CAACA,IAAIA,CAACA,eAAeA,CAACA,UAAUA,IAAIA,IAAIA,IAAIA,IAAIA,CAACA,UAAUA,IAAIA,IAAIA,CAACA,CAACA,CAACA;wBACpEA,MAAMA,CAACA,KAAKA,CAACA;oBACjBA,CAACA;oBACDA,MAAMA,CAACA,IAAIA,CAACA;gBAChBA,CAACA;gBArCDL;oBAACA,gBAAKA,CAACA,kBAAkBA,CAACA;;mBACnBA,4CAAeA,EAAkBA;gBAExCA;oBAACA,gBAAKA,CAACA,YAAYA,CAACA;;mBACbA,uCAAUA,EAASA;gBAhB9BA;oBAACA,oBAASA,CAACA;wBACPA,QAAQA,EAAEA,QAAQA;wBAClBA,QAAQA,EAAEA,kWAMTA;wBACDA,UAAUA,EAAEA,EAAEA;qBACjBA,CAACA;;oCAwCDA;gBAADA,sBAACA;YAADA,CAlDA,AAkDCA,IAAA;YAlDD,6CAkDC,CAAA","file":"slider.component.js","sourcesContent":["import {Component,Input} from 'angular2/angular2';\r\nimport {OptionService} from './option.service';\r\n\r\n@Component({\r\n    selector: 'slider',\r\n    template: `\r\n    <div class=\"row\" [hidden]=\"isShowSlider()\">\r\n            <label>{{availableOption.name}}</label>\r\n            <input type=\"range\" min=\"0\" max=\"3\" step=\"1\" [value]=\"getIndexForCurrentOption()\" (input)=\"doUpdate($event.target.value)\"></input>\r\n            <span class=\"range-value\">{{currentOption.value}}</span>\r\n    </div>\r\n    `,\r\n    directives: []\r\n})\r\nexport class SliderComponent {\r\n    @Input('available-option')\r\n    public availableOption:IAvailableOption;\r\n\r\n    @Input('datenturbo')\r\n    public datenturbo:Boolean;\r\n\r\n    private currentOption:IOption;\r\n\r\n    constructor(private optionService: OptionService) {}\r\n\r\n    onInit() {\r\n        this.doUpdate(0);\r\n    }\r\n\r\n    getIndexForCurrentOption():Number {\r\n        let index = 0;\r\n        for(let i=0; i<this.availableOption.values.length; i++) {\r\n\r\n        }\r\n        return index;\r\n    }\r\n\r\n    doUpdate(newvalue:number) {\r\n        this.currentOption = this.optionService.getOptionForIndex(this.availableOption, newvalue);\r\n    }\r\n\r\n    isShowSlider():Boolean {\r\n        if(this.availableOption.datenturbo==null) {\r\n            return false;\r\n        }\r\n        if(this.availableOption.datenturbo == false && this.datenturbo == false ) {\r\n            return false;\r\n        }\r\n        if(this.availableOption.datenturbo == true && this.datenturbo == true) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\ninterface IAvailableOption {\r\n    name:String,\r\n    values:Array<Number>,\r\n    datenturbo?:Boolean\r\n}\r\n\r\ninterface IOption {\r\n    name: String,\r\n    value: Number\r\n}\r\n"],"sourceRoot":"/source/"}